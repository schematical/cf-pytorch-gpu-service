version: 0.2

phases:
  pre_build:
    commands:
      - cd /codebuild/output/mnt

      - ls -la
      - rm -rf /codebuild/output/mnt/*
      # - rm -rf /opt/conda
      # - ln -s /codebuild/output/mnt/opt_conda /opt/conda
      - pwd
      - mkdir /codebuild/output/mnt/conda_cache
      - mkdir /codebuild/output/mnt/root_cache
      - mkdir /codebuild/output/mnt/ubuntu_cache
      - mkdir /codebuild/output/mnt/ldm_cache
      - pwd
      # - mkdir src
      # - cd src
      # - aws s3 cp s3://sc-cloud-formation-v1/model.ckpt ./model.ckpt
      # - git clone https://github.com/XavierXiao/Dreambooth-Stable-Diffusion
      # - cd ..
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

# Conda stuff
      - apt install --no-install-recommends -y build-essential gcc wget git curl # libcudnn8
      - wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
      - /bin/bash ~/miniconda.sh -b -p /opt/conda \ && \
      - export PATH=/opt/conda/bin:$PATH
  build:
    commands:
      # THIS IS BUILDING ON THE BUILD DOCKER TASK

      - git clone https://github.com/XavierXiao/Dreambooth-Stable-Diffusion
      - mv Dreambooth-Stable-Diffusion /codebuild/output/mnt/src
      - cd /codebuild/output/mnt/src
      - ls -la
      - conda env create -f ./environment.yaml -v
      - conda init bash
      - conda install pip -y
      - pip install -e .
      - mv /opt/conda/envs/ldm /codebuild/output/mnt/ldm_cache
      - aws s3 cp s3://sc-cloud-formation-v1/model.ckpt ./model.ckpt

      - cd ..
      - ls -la
      # THIS IS FROM BEFORE
      - cd $CODEBUILD_SRC_DIR
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $ECS_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - cd ~/
      - ls -la
      - cd /root
      - ls -la
artifacts:
  files: imagedefinitions.json